<!--
-->

<launch>
	<!-- Armadillo Pichi parameters --> 
	<param name="robot_max_velocity" value="0.4"/>
	<param name="diff_steer_wheel_radius" value="0.159"/>
	<param name="diff_steer_wheel_ticks_per_rev" value="1285"/>
	<param name="diff_steer_wheel_distance" value="0.85"/>

	<node pkg="rosbag" name="rosbag_record" type="record" args="-a"/>

	<group ns="fmSensors">
		<!-- extract data from messages transmitted by the VectorNav VN-100 IMU -->
		<node pkg="vectornav_vn100" name="imu_node"  type="vectornav_vn100_node" output="screen">
			<param name="vectornav_vn100_sub" value="/fmData/imu_rx"/>
			<param name="imu_pub" value="/fmInformation/imu"/>
			<param name="frame_id" value="imu_link"/>
			<param name="use_enu" value="true"/>
			<param name="covariance_x" value="0.001"/>
			<param name="covariance_y" value="0.001"/>
			<param name="covariance_z" value="0.001"/>
		 </node>

		<!-- Low cost GPS -->
		<!-- extract data from $GPGGA NMEA messages transmitted by the GPS -->
		<node pkg="gps_gpgga" name="nmea_to_gpgga" type="gps_gpgga_node" output="screen" respawn="true">
		    <param name="subscribe_topic_id" value="/fmData/rtk_gnss_rx" />
			<param name="publish_topic_id" value="/fmInformation/gpgga" />
		</node>

		<!-- append Transverse Mercator projection coordinates to NMEA $GPGGA message -->
		<node pkg="gpgga_to_tranmerc" name="gpgga_to_tranmerc" type="gpgga_to_tranmerc_node" output="screen">
			<param name="gpgga_sub" value="/fmInformation/gpgga" />
			<param name="gpgga_tranmerc_pub" value="/fmInformation/gpgga_tranmerc" />
			<param name="transverse_mercator_a" value="6378137.0" />
			<param name="transverse_mercator_f" value="0.0033528106647474805" /> 
			<param name="transverse_mercator_false_easting" value="500000.0" />
			<param name="transverse_mercator_scale_factor" value="0.9996" />
			<param name="transverse_mercator_origin_latitude" value="0.0" />
			<param name="transverse_mercator_central_meridian" value="9.0" />
			<param name="transverse_mercator_false_northing" value="0.0" />
		</node>

		<!-- append Transverse Mercator projection coordinates to NMEA $GPGGA message -->
		<node pkg="gpgga_to_tranmerc" name="gpgga_to_tranmerc_ref" type="gpgga_to_tranmerc_node" output="screen">
			<param name="gpgga_sub" value="/fmInformation/trimble_gpgga" />
			<param name="gpgga_tranmerc_pub" value="/fmInformation/gpgga_tranmerc_ref" />
			<param name="transverse_mercator_a" value="6378137.0" />
			<param name="transverse_mercator_f" value="0.0033528106647474805" /> 
			<param name="transverse_mercator_false_easting" value="500000.0" />
			<param name="transverse_mercator_scale_factor" value="0.9996" />
			<param name="transverse_mercator_origin_latitude" value="0.0" />
			<param name="transverse_mercator_central_meridian" value="9.0" />
			<param name="transverse_mercator_false_northing" value="0.0" />
		</node>

		<!-- Ground truth GPS (trimble) -->
		<!-- extract data from $GPGGA NMEA messages transmitted by the GPS -->
		<node pkg="gps_gpgga" name="nmea_to_gpgga_trimble" type="gps_gpgga_node" output="screen" respawn="true">
			<param name="subscribe_topic_id" value="/fmData/trimble_rx" />
			<param name="publish_topic_id" value="/fmInformation/trimble_gpgga" />
		</node>
	<node pkg="gpgga_to_tranmerc" name="gpgga_to_tranmerc_trimble" type="gpgga_to_tranmerc_node" output="screen">
			<param name="gpgga_sub" value="/fmInformation/trimble_gpgga" />
			<param name="gpgga_tranmerc_pub" value="/fmInformation/trimble_gpgga_tranmerc" />
			<param name="transverse_mercator_a" value="6378137.0" />
			<param name="transverse_mercator_f" value="0.0033528106647474805" /> 
			<param name="transverse_mercator_false_easting" value="500000.0" />
			<param name="transverse_mercator_scale_factor" value="0.9996" />
			<param name="transverse_mercator_origin_latitude" value="0.0" />
			<param name="transverse_mercator_central_meridian" value="9.0" />
			<param name="transverse_mercator_false_northing" value="0.0" />
		</node>

 		<!-- WADS sensor communication -->
		<node pkg="wads_implement" name="wads_converter" type="wads_implement_communication">
		      <param name="rx_topic" value="/fmData/wads_rx" />
		      <param name="wads_topic" value="/fmInformation/wads" />
			<param name="map_from_min" value="0" />
			<param name="map_from_max" value="1000" />
			<param name="map_to_min" value="0" />
			<param name="map_to_max" value="1000" />
		</node>
	</group>

	<group ns="fmProcessors">
		<!-- plot maps of pose, gnss and odometry data -->
		<!--node pkg="sdu_pichi_wptnav" name="robot_track_map" type="robot_track_map_node.py">
			<param name="pose_sub" value="/fmKnowledge/pose" />
			<param name="gnss_sub" value="/fmInformation/gpgga_tranmerc" />
			<param name="odom_sub" value="/fmKnowledge/encoder_odom" />
			<param name="wptnav_status_sub" value="/fmData/wptnav_status" />
			<param name="plot_pose_track" value="true" /> 
			<param name="plot_gnss_track" value="true" />
			<param name="plot_odometry_track" value="false" />
			<param name="plot_pose_yaw" value="false" />
			<param name="easting_offset" value="-588784.0" />
			<param name="northing_offset" value="-6137262.0" />
			<param name="trackpoint_threshold" value="0.05" /> 
			<param name="map_update_frequency" value="20.0" /> 
			<param name="map_title" value="Robot track" />
			<param name="map_window_size" value="7.0" />
		</node-->

		<!-- calculate odometry based on encoders and IMU yaw axis orientation -->
		<node pkg="differential_odometry" name="differential_odometry" type="differential_odometry_node" output="screen" >
			<param name="enc_left_sub" value="/fmInformation/enc_left" />
			<param name="enc_right_sub" value="/fmInformation/enc_right" />
			<param name="imu_sub" value="/fmInformation/imu" />
			<param name="odom_pub" value="/fmKnowledge/encoder_odom" />
			<param name="odom_estimate_frame" value="/odom_combined" />
			<param name="vehicle_frame" value="base_footprint" />
			<param name="encoder_output" value="absolute" />
			<!-- param name="ticks_per_meter_left" value="-1285" /-->
			<!-- param name="ticks_per_meter_right" value="642" / -->
			<param name="ticks_per_meter_left" value="-1353" />
			<param name="ticks_per_meter_right" value="755" />
			<param name="max_ticks_per_update" value="200" />
			<param name="yaw_angle_source" value="imu_angular_velocity" />
			<param name="imu_angular_velocity_yaw_axis" value="y" />
		</node>

		<!-- estimate robot 2d pose -->
		<node pkg="pose_2d_estimator" name="pose_estimator" type="pose_2d_estimator_node.py" output="screen" >
			<param name="odom_sub" value="/fmKnowledge/encoder_odom" />
			<param name="imu_sub" value="/fmInformation/imu" />
			<param name="gga_sub" value="/fmInformation/gpgga_tranmerc" />
			<param name="pose_pub" value="/fmKnowledge/pose" />
			<param name="update_rate" value="20" />
			<param name="publish_relative_pose" type="boolean" value="false" />
			<param name="ekf_initial_guess_easting" value="588784.0" /> <!-- [m] if unsure set to 0.0 -->
			<param name="ekf_initial_guess_northing" value="6137262.0" /> <!-- [m] if unsure set to 0.0 -->
			<param name="ekf_initial_guess_yaw" value="0.0" /> <!-- [rad] if unsure set to 0.0 -->
			<param name="odometry_distance_variance" value="0.000001" /> <!-- [m/update] -->
			<param name="odometry_angular_variance" value="0.00035" /> <!-- [rad/update] -->
		</node>

	</group>

	<group ns="fmDecisionMakers">
		<node pkg="sdu_pichi_hudem" name="mission_control" type="simple_mission.py">
    		<param name="deadman_topic" value="/fmSignals/deadman" />
			<param name="cmd_vel_topic" value="/fmSignals/cmd_vel" />
            		<param name="max_linear_velocity" value="0.4"/>
            		<param name="max_angular_velocity" value="0.4"/>
			<param name="deadband" value="5"/>
			<param name="reduced_range" value="50"/>
			<param name="feedback_topic" value="/fmLib/joy/set_feedback" />
			<param name="joy_topic" value="/fmLib/joy" />
			<param name="status_topic" value="/fmData/state"/>
			<param name="publish_frequency" value="10"/>
		</node>
	</group>

	<group ns="fmExecutors">
		<node pkg="sdu_pichi_hudem" type="casmo_wriggle_navigation.py" name="navigate_waypoints" output="screen">
			<param name="automode_sub" value="/fmDecisionMakers/automode" />
			<param name="pose_sub" value="/fmKnowledge/pose" />
			<param name="joy_sub" value="/fmLib/joy" />
			<param name="cmd_vel_pub" value="/fmSignals/cmd_vel" />
			<param name="status_pub" value="/fmData/wptnav_status" />
			<param name="status_publish_interval" value="2" />
			<param name="print_debug_information" value="true" />
			<param name="sensor_penalty_distance" value="0.3" />
			<param name="casmo_width" value="1.0" />
			<param name="turn_angle_left" value="0.6" />
			<param name="turn_angle_right" value="-0.6" />
			<param name="wads_threshold" value="100" />
			<param name="wpt_tolerance" value="0.2" />
		</node>		
	</group>

	<group ns="fmControllers">
		<node pkg="differential_ifk" name="differential_driver" type="differential_ifk_node" output="screen" >
			<param name="hl_subscriber_topic" value="/fmSignals/cmd_vel"/>
			<param name="ll_publisher_topic_left" value="/fmSignals/cmd_vel_left"/>
			<param name="ll_publisher_topic_right" value="/fmSignals/cmd_vel_right"/>
		</node>
	     
		<node pkg="sdu_pichi" name="robot_interface" type="sdu_pichi_node" output="screen" >
			<param name="cmd_vel_ch1_topic" value="/fmSignals/cmd_vel_left"/>
			<param name="cmd_vel_ch2_topic" value="/fmSignals/cmd_vel_right"/>
			<param name="serial_rx_topic" value="/fmData/robot_rx"/>
			<param name="serial_tx_topic" value="/fmData/robot_tx"/>
			<param name="deadman_topic" value="/fmSignals/deadman"/>
			<param name="encoder_ch1_topic" value="/fmInformation/encoder_left"/>
			<param name="encoder_ch2_topic" value="/fmInformation/encoder_right"/>	
			<param name="power_ch1_topic" value="/fmData/power_left"/>
			<param name="power_ch2_topic" value="/fmData/power_right"/>
			<param name="propulsion_module_status_topic" value="/fmInformation/propulsion_module_status"/>
			<param name="propulsion_module_feedback_left_topic" value="/fmInformation/propulsion_module_feedback_left"/>
			<param name="propulsion_module_feedback_right_topic" value="/fmInformation/propulsion_module_feedback_right"/>
			<param name="status_topic" value="/fmData/status"/>	
			<param name="ticks_per_meter_left" value="-1353" />
			<param name="ticks_per_meter_right" value="755" />
			<param name="mps_to_thrust" value="500"/>
			<param name="max_controller_command" value="1000" />
			<param name="p_gain" value="1"/>
			<param name="i_gain" value="2"/>
			<param name="d_gain" value="0.001"/>
			<param name="i_max" value="2"/>
			<param name="closed_loop_operation" value="false"/>        
		</node>
	</group>

	<group ns="fmLib">
		<!-- Wiimote interface -->
		<node pkg="wiimote" type="wiimote_node.py" name="wiimote" respawn="true">
			<param name="fixed_wiimote_address" value="00:1F:32:B3:A2:F3"/>
		</node >		

		<!-- serial communication with the Armadillo Pichi robot -->
		<node pkg="serial_string" name="robot_serial" type="serial_string_node" output="screen" respawn="true">
			<param name="publisher_topic" value="/fmData/robot_rx" />	 
			<param name="subscriber_topic" value="/fmData/robot_tx" />
			<param name="device" value="/dev/robot" />	
			<param name="baudrate" value="115200" />
			<param name="termination_character" value="13"/>
		</node>

		<!-- serial communication with the RTK-GNSS -->
		<node pkg="serial_string" name="gnss_serial_string_node" type="serial_string_node" output="screen" respawn="true">
			<param name="publisher_topic" value="/fmData/rtk_gnss_rx" />	 
			<param name="subscriber_topic" value="/fmData/rtk_gnss_tx" />
			<param name="device" value="/dev/gps" />	
			<param name="baudrate" value="115200" />
			<param name="termination_character" value="10"/>
		</node> 	

		<!-- serial communication with the trimble GPS / Ground truth -->
		<node pkg="serial_string" name="trimble_serial_string_node" type="serial_string_node" output="screen" respawn="true">
			<param name="publisher_topic" value="/fmData/trimble_rx" />	 
			<param name="subscriber_topic" value="/fmData/trimble_tx" />
			<param name="device" value="/dev/refgps" />	
			<param name="baudrate" value="115200" />
			<param name="termination_character" value="10"/>
		</node> 

		<!-- serial communication with the IMU -->
		<node pkg="serial_string" name="imu_serial_string_node" type="serial_string_node" output="screen" respawn="true">
			<param name="publisher_topic" value="/fmData/imu_rx" />	 
			<param name="subscriber_topic" value="/fmData/imu_tx" />
			<param name="device" value="/dev/imu" />	
			<param name="baudrate" value="115200" />
			<param name="termination_character" value="10"/>
		</node> 

		<!-- serial communication with the WADS sensor -->
		<node pkg="serial_string" name="wads_serial" type="serial_string_node" output="screen" respawn="true">
			<param name="publisher_topic" value="/fmData/wads_rx" />	 
			<param name="subscriber_topic" value="/fmData/wads_tx" />
			<param name="device" value="/dev/wads" />	
			<param name="baudrate" value="115200" />
			<param name="termination_character" value="13"/>
		</node>


		<!-- launch conversion node to convert IntStamped messages to encoder messages -->
		<!-- (this is a temporary fix until we get all encoder messages changed to IntStamped) -->
		<node pkg="int_stamped_to_encoder" name="enc_conversion" type="encoder_converter.py">
			<param name="left_sub" value="/fmInformation/encoder_left" />
			<param name="right_sub" value="/fmInformation/encoder_right" />
			<param name="left_pub" value="/fmInformation/enc_left" />
			<param name="right_pub" value="/fmInformation/enc_right" />
		</node>
	</group>
</launch>
